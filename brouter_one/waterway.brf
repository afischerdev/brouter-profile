---model:btools.router.WaterwayModel
---context:global   # following code refers to global config

# my boat in meter
assign boat_height	1.5     # %boat_height% | Boat height in Meter | number
assign boat_width	2.2     # %boat_width% | Boat width in Meter | number
assign boat_length	10.0	# Boat height in Meter | (not used now)
assign boat_draft	1.2		# %boat_draft% | Boat draft in Meter | number
assign literHour    1.0		# %literHour% | liter per hour | number

# my boat has max speed
assign  maxSpeed             18  # km/h (Caution: this is case sensitive internal parameter and different to maxspeed)
                                 # handle with care, this belongs to your local area and your boat
assign  speed_normal         10  # %speed_normal% | Speed in kmh | number
assign  flow_rate            0   # %flow_rate% | Flow in kmh | number

assign   shortest_way             0   # %shortest_way% | find the direct way | boolean

assign   useCEMTonly              0   # %useCEMTonly% | use only CEMT, exclude unmarked like canal, fairway | boolean

assign   turnInstructionMode      1   # 0=none, 1=auto-choose, 2=locus-style, 3=osmand-style, 4=comment-style, 5=gpsies, 6=orux-style
assign   processUnusedTags        1   # lists all (incl. unused) key/value pairs in geojson

assign   cost1speed               20  # kmh
assign   inverseRouting           1
assign   showspeed                1   # show speed instead of elevation (geojson)

assign   waiting_lock 			  900    # in seconds, for one lock_gate
assign   waiting_bridge			  900    # in seconds
assign   around_time			  900    # in seconds, avoid obstacles

assign   notdefined               100000

---context:way   # following code refers to way-tags

assign turncost 0
assign initialcost 0

assign no_depth 
	switch  and not      depth=
	            lesser v:depth boat_draft                          true
	switch  and not      maxdraft=
	            lesser v:maxdraft boat_draft                       true
	switch  and not      draft=
	            lesser v:draft boat_draft                          true
	switch  and not      maxdraught=
	            lesser v:maxdraught boat_draft                     true
	switch  and not      mindepth=
	            lesser v:mindepth boat_draft                       true
	switch  and not      waterway:mindepth=
	            lesser v:waterway:mindepth boat_draft              true
	switch  and not      seamark:fairway:minimum_depth=
	            lesser v:seamark:fairway:minimum_depth boat_draft  true
	false

assign no_width 
    switch and not      seamark:bridge:clearance_width=
	           lesser v:seamark:bridge:clearance_width boat_width true
    switch and not      seamark:gate:clearance_width=
	           lesser v:seamark:gate:clearance_width boat_width true
    false

assign	use_CEMT 
    if not CEMT= then (
		switch motorboat=no false
		switch ship=no      false
		switch CEMT=0|I|II|III|IV|V|Va|Vb|VI|VIa|VIb|VIc|VII true	# make sure to drop classes you can't use
        false
    )
    else 
	    false


assign boat_maxspeed =
  if ( and waterway=river reversedirection=yes ) then add speed_normal flow_rate 
  else if ( and waterway=river reversedirection= ) then sub speed_normal flow_rate
  else speed_normal


assign maxspeed_impl =
  switch CEMT=0                     6
  switch CEMT=I|II|III|IV           10
  switch CEMT=V|Va|Vb               12
  switch CEMT=VI|VIa|VIb|VIc|VII    15
  20
  
assign maxspeed_expl =
  switch maxspeed=  notdefined
  switch maxspeed=6 6
  switch maxspeed=9 9
  switch maxspeed=4.5 4.5
  switch maxspeed=5 5
  switch maxspeed=7 7
  switch maxspeed=8 8
  switch maxspeed=10 10
  switch maxspeed=12 12
  switch maxspeed=13 13
  switch maxspeed=13.5 13.5
  switch maxspeed=15 15
  switch maxspeed=16 16
  switch maxspeed=20 20
  switch maxspeed=25 25
  notdefined

assign maxspeed_defined 
  switch lesser maxspeed_expl notdefined maxspeed_expl maxspeed_impl 
  
assign maxspeed =
  min maxspeed_defined boat_maxspeed

assign costfactor
	if  and use_CEMT 
	    or  not no_depth
            not no_width then (
      	1
    )
    else (
        if      waterway=                   then notdefined
        else if not useCEMTonly then 
			switch and 
			       waterway=canal|river|fairway|safe_water 
                   or no_depth no_width				           notdefined
            switch waterway=canal|river|fairway|safe_water     1
			switch and  seamark:type=fairway|recommended_track 
                   or no_depth no_width				           notdefined
			switch seamark:type=fairway|recommended_track      1 
#			else if motorboat=yes           then 1
#			else if ship=yes                then 1
			notdefined
		else
			notdefined	
    )

---context:node  # following code refers to node tags

assign free_height 
	if seamark:bridge:category=opening then 
	  switch  and not       seamark:bridge:clearance_height_closed=
				  greater v:seamark:bridge:clearance_height_closed boat_height true 
	  false
	else false

assign waiting_height 
	if seamark:bridge:category=opening then 
	  switch  and not      seamark:bridge:clearance_height_closed=
	              lesser v:seamark:bridge:clearance_height_closed boat_height true 
	  switch  and not      seamark:bridge:clearance_height=
	              lesser v:seamark:bridge:clearance_height boat_height true 
	  false
	else false

assign no_height 
	if seamark:bridge:category=opening then 
	  switch  and not      seamark:bridge:clearance_height_open=
	              lesser v:seamark:bridge:clearance_height_open boat_height true 
	  false
	else if seamark:bridge:category=fixed then 
	  switch  and not      seamark:bridge:clearance_height=
	              lesser v:seamark:bridge:clearance_height boat_height true
	  switch  and not      seamark:bridge:clearance_height_safe=
	              lesser v:seamark:bridge:clearance_height_safe boat_height true
      false
	else 	if seamark:type=cable_overhead then 
	  switch  and not      seamark:cable_overhead:clearance_height_safe=
	              lesser v:seamark:cable_overhead:clearance_height_safe boat_height true 
	  switch  and not      seamark:cable_overhead:clearance_height=
	              lesser v:seamark:cable_overhead:clearance_height boat_height true 
      false  
	else 
	  false

assign no_width
	switch and not      seamark:bridge:clearance_width=
	           lesser v:seamark:bridge:clearance_width boat_width true
	false

assign no_depth
	switch and not      depth=
	           lesser v:depth boat_draft true
	switch and not      maxdraft=
	           lesser v:maxdraft boat_draft true
	switch and not      water:depth=
	           lesser v:water:depth boat_draft true
	switch and not      waterway:mindepth=
	           lesser v:waterway:mindepth boat_draft true
	false
	
assign initialcost 
	switch no_width         notdefined
	switch no_height        notdefined
	switch no_depth         notdefined
	switch waiting_height      waiting_bridge
#	switch free_height         100
	switch waterway=lock_gate  waiting_lock
	0